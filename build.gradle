plugins {
    id "io.qameta.allure" version "2.8.1"
    id 'java'
    id 'idea'
    id 'java-gradle-plugin'
    id 'com.adarshr.test-logger' version "2.0.0"
    id "io.freefair.lombok" version "5.0.1"
}

group 'com.test.automation'
version '1.0-SNAPSHOT'

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    allureVersion = '2.13.2'
    assertJVersion = '3.15.0'
    junitJupiterVersion = '5.6.1'
    log4jVersion = '2.13.1'
    ownerVersion = '1.0.12'
    restAssuredVersion = '4.2.0'
    jsonSchemaValidatorVersion = '1.12.1'
}

dependencies {
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitJupiterVersion
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitJupiterVersion
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-params", version: junitJupiterVersion
    testCompile group: 'io.qameta.allure', name: 'allure-rest-assured', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-junit5', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-assertj', version: allureVersion
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.aeonbits.owner', name: 'owner', version: ownerVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: assertJVersion
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion
    testCompile group: 'org.json', name: 'json', version: '20201115'
    testCompile group: 'com.jcraft', name: 'jsch', version: '0.1.50'
    testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    testCompile group: 'com.jcraft', name: 'jsch', version: '0.1.50'
}

allure {
    autoconfigure = true
    version = "${allureVersion}"
    useJUnit5 {
        version = "${allureVersion}"
    }
}

test {
    useJUnitPlatform {}

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }

    systemProperty "env", System.getProperty("env")
}

clean.doFirst {
    delete "${rootDir}/allure-results"
}
